# vote_process.py
from ecpy.curves import Curve, Point
from crypto.hash_util import hash_ballot
from crypto.encryption import encrypt_hash, decrypt_ciphertext, verify_decrypted_point
from crypto.signature import sign_hash, verify_signature
from kzp.store import BallotStorage
from kzp.signer import BallotSigner
from kzp.keys import server_priv, server_pub, secretary_priv, secretary_pub, kep_priv, kep_pub, voter_pub

curve = Curve.get_curve('Ed25519')
G = curve.generator

signer = BallotSigner(server_priv, secretary_priv, kep_priv, G)
storage = BallotStorage()

def submit_vote(voter_id: str, ballot_text: str) -> None:
    # 1Ô∏è‚É£ –•–µ—à –±—é–ª–µ—Ç–µ–Ω—è
    hash_scalar = hash_ballot(ballot_text)

    # 2Ô∏è‚É£ –ü—ñ–¥–ø–∏—Å–∞–Ω–Ω—è
    signatures = signer.sign_all(ballot_text)

    # 3Ô∏è‚É£ –®–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è
    C1, C2 = encrypt_hash(hash_scalar, voter_pub)

    # 4Ô∏è‚É£ –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è
    storage.store_encrypted(voter_id, {
        'C1': C1,
        'C2': C2,
        'signatures': signatures
    })

    print(f"‚úÖ –ì–æ–ª–æ—Å –¥–ª—è {voter_id} –∑–±–µ—Ä–µ–∂–µ–Ω–æ.")

def verify_vote(voter_id: str, ballot_text: str) -> bool:
    entry = storage.retrieve_for_decryption(voter_id)
    if not entry:
        print("‚ùå –ì–æ–ª–æ—Å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return False

    hash_scalar = hash_ballot(ballot_text)
    C1, C2 = entry['C1'], entry['C2']
    signatures = entry['signatures']

    # 1Ô∏è‚É£ –†–æ–∑—à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è
    decrypted = decrypt_ciphertext(C1, C2, server_priv)

    # 2Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞
    match = verify_decrypted_point(decrypted, hash_scalar)
    print(f"üì• –•–µ—à —Å–ø—ñ–≤–ø–∞–¥–∞—î: {'‚úÖ' if match else '‚ùå'}")

    # 3Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–ø–∏—Å—ñ–≤
    server_valid = verify_signature(hash_scalar, signatures['server_signature'], server_pub)
    secretary_valid = verify_signature(hash_scalar, signatures['secretary_signature'], secretary_pub)
    kep_valid = verify_signature(hash_scalar, signatures['kep_signature'], kep_pub)

    print("üîê –ü—ñ–¥–ø–∏—Å–∏:")
    print(f" - –°–µ—Ä–≤–µ—Ä: {'‚úÖ' if server_valid else '‚ùå'}")
    print(f" - –°–µ–∫—Ä–µ—Ç–∞—Ä: {'‚úÖ' if secretary_valid else '‚ùå'}")
    print(f" - –ö–ï–ü: {'‚úÖ' if kep_valid else '‚ùå'}")

    return match and server_valid and secretary_valid and kep_valid

if __name__ == "__main__":
    voter_id = "user123"
    ballot = "–ì–æ–ª–æ—Å—É—é '–ó–∞' –ø–∏—Ç–∞–Ω–Ω—è ‚Ññ1"
    submit_vote(voter_id, ballot)
    verify_vote(voter_id, ballot)

