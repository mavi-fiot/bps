# crypto/generate_vote_payload3.py
from ecpy.curves import Curve, Point
from crypto.hash_util import hash_ballot
from crypto.signature import sign_hash
import json

# –ö—Ä–∏–≤–∞
curve = Curve.get_curve('Ed25519')
G = curve.generator
q = curve.order

# üîê –¢–≤—ñ–π –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á (—Ç–æ–π, —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤—Å—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø–∞—Ä–∏ –∫–ª—é—á—ñ–≤)
priv_key = 6468757615581100091837520261682486743586164670420878291904123348470553542821
pub_key = priv_key * G

# –î–∞–Ω—ñ –±—é–ª–µ—Ç–µ–Ω—è
ballot_text = "–ó–∞—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–≤—ñ—Ç –∑–∞ 2024 —Ä—ñ–∫"
voter_id = "demo-voter"
ballot_id = "c1d8c64e-b2a8-407d-9afd-ddfa0d867797"
choice = "–∑–∞"

# –ü—ñ–¥–ø–∏—Å
personalized = ballot_text + voter_id
hash_scalar = hash_ballot(personalized)
signature = sign_hash(hash_scalar, priv_key)

payload = {
    "voter_id": voter_id,
    "ballot_id": ballot_id,
    "choice": choice,
    "signature": {"x": signature.x, "y": signature.y},
    "public_key": {"x": pub_key.x, "y": pub_key.y}
}

print(json.dumps(payload, indent=2))
